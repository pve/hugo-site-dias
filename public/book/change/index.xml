<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Change and control on Digital Infrastructures at Scale</title>
    <link>http://localhost:1313/book/change/</link>
    <description>Recent content in Change and control on Digital Infrastructures at Scale</description>
    <generator>Hugo -- 0.147.6</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 May 2025 20:45:16 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/book/change/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction to Change and Control</title>
      <link>http://localhost:1313/book/change/intro-to-change-control/</link>
      <pubDate>Tue, 08 Apr 2025 09:17:02 +0000</pubDate>
      <guid>http://localhost:1313/book/change/intro-to-change-control/</guid>
      <description>&lt;p&gt;Change is quite inherent in technology, and in particular in information technology.
At the same time we want technology to provide a reliable service, and that requires a degree of control.
In this chapter we&amp;rsquo;ll explore some fundamentals of change, in particular how this works with groups of people.&lt;/p&gt;
&lt;p&gt;Change and control mindsets complement each other.
We need both, even if they conflict at times.&lt;/p&gt;
&lt;p&gt;For example, in a typical IT environment, you have developers and system administrators.
The output of the developers is a stream of changes: new features, improvements, bug fixes, and so on.
Adminstrators are in the business of keeping everything stable, the same.
They see no fundamental difference between a new feature and an incident. Both are disrupting the normal flow of business. Consequently, they are seen as a threat, and that is why it often feels that developers and system administrators are from different planets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control Through Feedback Loops</title>
      <link>http://localhost:1313/book/change/control-feedback/</link>
      <pubDate>Sat, 19 Apr 2025 20:01:07 +0000</pubDate>
      <guid>http://localhost:1313/book/change/control-feedback/</guid>
      <description>&lt;p&gt;There are many ways to influence and control a system, but one of the most controlled (pun intended) ways is to use feedback loops.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start with an analogy first: driving a car.&lt;/p&gt;
&lt;p&gt;If you want the car to stop as fast as possible, it suffices to push the brakes as hard as you can. But that does not give you much control.
For example, your passengers might not like it, and it leads to wear on the tires.
If you want the car to stop at an intended location, for example just in front of a traffic light, you apply a feedback loop.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Systematically applying technology</title>
      <link>http://localhost:1313/book/change/technical-meta-model/</link>
      <pubDate>Sat, 22 Mar 2025 17:56:43 +0000</pubDate>
      <guid>http://localhost:1313/book/change/technical-meta-model/</guid>
      <description>&lt;p&gt;How to fix the WiFi? How to find a new phone for grandma?&lt;/p&gt;
&lt;p&gt;Applying technology follows certain rules. However, many people only have an intuitive understanding of these rules. As a result, technology is not optimally applied.
By understanding how applying technology really works, you can be more effective, more efficient, reduce waste, and overall do a better job. It takes just a few simple steps to improve any attempt at applying technology. We&amp;rsquo;ll focus on information technology here, though most principles have wider applicability.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Network Management Automation - the DHCP case</title>
      <link>http://localhost:1313/book/change/dhcp-automation/</link>
      <pubDate>Fri, 04 Apr 2025 14:20:26 +0000</pubDate>
      <guid>http://localhost:1313/book/change/dhcp-automation/</guid>
      <description>&lt;p&gt;As we mature processes, they come within reach of actual automation. Especially IT management processes. To paraphrase General Carl von Clausewitz, who said &amp;ldquo;War is the continuation of diplomacy with different means&amp;rdquo;, we can say that automation is the progression of process maturity with different means - replacing human effort with software and systems.&lt;/p&gt;
&lt;p&gt;My favorite historical example is IP address allocation. In the past, whenever there was a new computer, you would walk up to the head of the lab or data center and ask for a new IP address for that machine. You may remember that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Technology architecture for non-techies</title>
      <link>http://localhost:1313/book/change/new-skills-needed/</link>
      <pubDate>Fri, 02 May 2025 08:07:42 +0000</pubDate>
      <guid>http://localhost:1313/book/change/new-skills-needed/</guid>
      <description>&lt;p&gt;Understanding the technical architecture of digital infrastructures is critically important, in particular for &lt;em&gt;non-technical&lt;/em&gt; professionals.&lt;/p&gt;
&lt;p&gt;I have spent more than a decade educating people on cloud security, for example through certifications such as the &lt;a href=&#34;https://www.clubcloudcomputing.com/ccsk/&#34;&gt;Certificate of Cloud Security Knowledge (CCSK)&lt;/a&gt;, organized by the Cloud Security Alliance (CSA), and the &lt;a href=&#34;https://www.clubcloudcomputing.com/ccsp/&#34;&gt;Certified Cloud Security Professional (CCSP)&lt;/a&gt;, as organized by (ISC)2.
These bodies of knowledge cover a lot of ground, and most of it is related to digital infrastructures at scale.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why lawyers need to understand cloud</title>
      <link>http://localhost:1313/book/change/lawyers-need-understand-tech/</link>
      <pubDate>Thu, 03 May 2018 13:54:48 +0000</pubDate>
      <guid>http://localhost:1313/book/change/lawyers-need-understand-tech/</guid>
      <description>&lt;p&gt;Cloud is too important to leave to technical people.&lt;/p&gt;
&lt;p&gt;Cloud distributes responsibility for IT services across an IT supply chain. This supply chain is composed of independent providers. This implies that there are these companies have &lt;strong&gt;technical boundaries&lt;/strong&gt; that are matched by organizational and &lt;strong&gt;contractual boundaries&lt;/strong&gt;. This is new, we did not have that before the digital revolution.
Amazon calls this the &lt;strong&gt;shared&lt;/strong&gt; responsibility model for cloud security.
I would simplify that as:  &lt;em&gt;what do I do, and what do you do&lt;/em&gt;? For example, who is responsible for patching the Operating System in an IaaS service model?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Organization Size Matters - Dunbar&#39;s number</title>
      <link>http://localhost:1313/book/change/org-size-matters/</link>
      <pubDate>Thu, 08 May 2025 20:45:16 +0000</pubDate>
      <guid>http://localhost:1313/book/change/org-size-matters/</guid>
      <description>&lt;p&gt;Over the years, I have worked with many organizations, large and small.
In one case, I implemented the exact same change in more than 15 organizations, whose size ranged from 35 to 35 thousand employees.
You can imagine that this plays out differently across these organizations.
But that is a story for another unit.&lt;/p&gt;
&lt;p&gt;It led me to see patterns in decision making and trust.
Who takes decisions in an organization?
How do people even talk about decisions, especially when they concern digital technology?
Who do you trust?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
