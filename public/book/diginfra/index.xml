<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>What are digital infrastructures? on DigInfAtScale</title>
    <link>http://localhost:1313/book/diginfra/</link>
    <description>Recent content in What are digital infrastructures? on DigInfAtScale</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Mar 2025 21:34:21 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/book/diginfra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Essence of Digital Infrastructures</title>
      <link>http://localhost:1313/book/diginfra/essence-digital-infrastructures/</link>
      <pubDate>Mon, 10 Mar 2025 21:34:21 +0000</pubDate>
      <guid>http://localhost:1313/book/diginfra/essence-digital-infrastructures/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s take a moment to review what I consider to be a digital infrastructure.
It will be hard to define it with scientific rigor, in the same way that it is hard to unambiguously define what, for example, a car is.
There will always be edge cases.&lt;/p&gt;
&lt;p&gt;What do roads, airports, the internet, the electricity network, and a search engine have in common? They are all services that are independent of a specific user or usage. They are provisioned on a longer timescale than that of an individual usage. And they are typically not owned by their users, or at least, not directly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deployment Diagrams</title>
      <link>http://localhost:1313/book/diginfra/deployment-diagrams/</link>
      <pubDate>Sun, 09 Mar 2025 21:19:45 +0000</pubDate>
      <guid>http://localhost:1313/book/diginfra/deployment-diagrams/</guid>
      <description>&lt;p&gt;Deployment is everything that happens between writing software and actually using that software by its intended users. And as we get more software and more users, deployment becomes more complex.&lt;/p&gt;
&lt;h1 id=&#34;why-deployment-diagrams&#34;&gt;Why deployment diagrams?&lt;/h1&gt;
&lt;p&gt;Deployment diagrams are a great technique for communicating about important decisions in deploying software. Decisions such as who is going to do what, how are things connected, and so on.&lt;/p&gt;
&lt;p&gt;There are many ways to draw deployment diagrams and many standards to choose from. UML and Archimate are just a few of them. To me, there is no single right way to create deployment diagrams. In that sense, these diagrams are more like maps. And the usefulness of a map depends on the journey that you are going to make. A map for a mountain walk is pretty useless if you want to make a railroad journey and vice versa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What are AI digital infrastructures?</title>
      <link>http://localhost:1313/book/diginfra/digital-inf-ai/</link>
      <pubDate>Sat, 08 Mar 2025 17:57:16 +0000</pubDate>
      <guid>http://localhost:1313/book/diginfra/digital-inf-ai/</guid>
      <description>&lt;p&gt;The AI landscape has many digital infrastructures.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s explain this step by step and focus on which data is stored where, and how it is processed.&lt;/p&gt;
&lt;p&gt;A core element of AI systems is a trained model. At least that is true for the dominant AI form these days: deep learning neural networks.&lt;/p&gt;
&lt;p&gt;A trained model is the result of processing a lot of training data by a specific neural network. These models are fixed in size, but typically very big. The smallest useful models are close to a Gigabyte, while recent public chat models run into multiple Terabytes.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
