[{"content":"Building Our Own Cloud Kootwijk: Rethinking Digital Sovereignty In the Netherlands, we are currently engaged in a heated debate about the undesirable dominance of big tech, particularly over a significant portion of the digital infrastructure of the Dutch government. This includes email, file storage, and many other forms of digital storage and processing—most of which are handled by American big tech companies.\nI am sure a similar debate is going on in many other countries.\nGiven this reality, what can we do about it? How can we build our own \u0026ldquo;Cloud Kootwijk\u0026rdquo;?\nExploring Alternatives Setting up a comprehensive, government-funded solution does not seem like a viable approach. History has shown many failures in such attempts. Moreover, our current procurement processes do not lend themselves to agility. Due to the scale involved, any such initiative would likely end up with a large, well-established company.\nThis brings us to another challenge: every big tech company is, or ultimately becomes, an American company. The two largest software markets in the world are the U.S. and Germany. Even the largest German IT firms cannot afford to ignore the American market and are often listed on U.S. stock exchanges.\nAs a result, every big tech company—directly or indirectly—falls under the control of the U.S. government, regardless of its political orientation at any given time.\nRethinking the Approach With this in mind, we need to rethink our strategy. If big tech is not the answer, how can we organize \u0026ldquo;small tech\u0026rdquo; in a way that makes it a viable alternative for a large-scale buyer?\nWe are talking about digital infrastructures that are essential to the functioning of our society. These infrastructures have a certain \u0026ldquo;commodity\u0026rdquo; nature and do not primarily revolve around innovative applications. In principle, they should be deliverable by multiple companies.\nThere is no fundamental barrier to IT services being provided by a consortium of service providers. In fact, this is how the Internet has operated for decades. Its core consists of open standards that facilitate a market of service providers with sustainable business models. To prevent monopolization, these markets need some level of regulation, including enforcing open standards for interoperability and portability. In the case of strategic autonomy, additional rules regarding ownership of these companies may also be necessary.\nWhile having much of the underlying software available as open source would help, it is not essential. Open source is neither a sufficient nor a necessary condition for interoperability and portability.\nOpen standards (ideally with open-source reference implementations) are more important. They also contribute to another critical element of \u0026ldquo;small tech\u0026rdquo;: building sufficient expertise.\nKnowledge as the Foundation of Autonomy In my view, IT services consist of hardware, software, and systems management . Management can be broken down into processes and skilled personnel. Most of these elements are either commodities or readily available.\nFinding enough personnel competent in the relevant technologies is more challenging, but not impossible.\nTo achieve a sufficient level of autonomy in digital infrastructures, we need to develop and maintain this expertise. The best way I know to do this is to start small and scale up. Expanding by a factor of ten at each step is an ambitious yet achievable goal. This points towards managing our digital infrastructure through a consortium of smaller companies. The VNG’s Common Ground and Haven initiatives offer promising examples in this direction.\nA Call to Action I challenge both policymakers and society to launch a production pilot using a fully open-source office automation environment. I believe we could select the necessary open-source components for such a pilot in an afternoon. Managing this at a scale of 1,000 active users would be an excellent starting ambition. This will take months—perhaps longer—but if successful, it will provide a blueprint for a \u0026ldquo;Cloud Kootwijk\u0026rdquo; should the need become urgent.\nWill this be painful? Yes. But not as painful as realizing too late that we have lost our democracy and prosperity to a foreign power—or worse, to a group of multinational corporations that are not even under the control of any state.\n","permalink":"http://localhost:1313/posts/how-can-we-achieve-autonomy/","summary":"\u003ch3 id=\"building-our-own-cloud-kootwijk-rethinking-digital-sovereignty\"\u003eBuilding Our Own Cloud Kootwijk: Rethinking Digital Sovereignty\u003c/h3\u003e\n\u003cp\u003eIn the Netherlands, we are currently engaged in a heated debate about the undesirable dominance of big tech, particularly over a significant portion of the digital infrastructure of the Dutch government. This includes email, file storage, and many other forms of digital storage and processing—most of which are handled by American big tech companies.\u003c/p\u003e\n\u003cp\u003eI am sure a similar debate is going on in many other countries.\u003c/p\u003e","title":"How Can We Achieve Autonomy Over Our Digital Infrastructures?"},{"content":"This is hardly a book on digital technology, but more on the organisational and societal impact of managing this at scale.\nFor a better understanding of digital technology I highly recommend Brian Kernighan’s “Understanding the Digital World”. () And if you want to have fun while learning how to understand software, I’d highly recommend “The Nature of Code” by Daniel Schiffman ().\nAs you will find out in this book, I am putting on some very specific lenses to look at the world. You may find them restrictive; you may find them arbitrary(?), you may find them opiniated. Yes, this specific way of looking at the effects of digital technology has its limits. However, the essence of understanding is to be able to extract the core elements out of something. Paradoxically, only by restricting the way we look at things can we see more clearly. Cut through the noise. Like Goethe said: “In der Beschränkung zeigt sich erst der Meister”, though he applied that to a different subject.\nI have a very limited perspective of the world. And yet, that limitation has served me well. It has allowed me to focus on core principles that you may not see if you take in all the richness and idiosyncrasies. My limited perspective can serve you as a map. And you know that every map is not equal to the terrain it covers. In fact, the purpose of the map is to extract only the most relevant features of the terrain. How good a map is, judgement on the quality of the map is not objective. It is dependent on what you use the map for. A railroad map is close to useless if you navigate by car or boat. That is why you should consider the models and the perspectives that I give you as maps to guide your journey. If they bring you where you want to be, great! If not, get a different map.\nAs you will see, the core elements of the models I find useful revolve around interactions between autonomous agents that process information. These agents typically have limited (bounded) capabilities. (link to maps as means to reduce attention requirements). These agents can be humans, software or AI agents.\nAs I believe that you are an autonomous agent as well, it is up to you to decide how useful these models and stories are for your practice. You will not find answers to every question that you have around digital infrastructures. Where possible and relevant I will point you to other views, stories and explanations. At the same time, you may find my maps to be also useful for domains that are outside the digital.\n","permalink":"http://localhost:1313/posts/preface/","summary":"\u003cp\u003eThis is hardly a book on digital technology, but more on the organisational and societal impact of managing this at scale.\u003c/p\u003e\n\u003cp\u003eFor a better understanding of digital technology I highly recommend Brian Kernighan’s “Understanding the Digital World”. () And if you want to have fun while learning how to understand software, I’d highly recommend “The Nature of Code” by Daniel Schiffman ().\u003c/p\u003e\n\u003cp\u003eAs you will find out in this book, I am putting on some very specific lenses to look at the world. You may find them restrictive; you may find them arbitrary(?), you may find them opiniated. Yes, this specific way of looking at the effects of digital technology has its limits. However, the essence of understanding is to be able to extract the core elements out of something. Paradoxically, only by restricting the way we look at things can we see more clearly. Cut through the noise. Like Goethe said: “In der Beschränkung zeigt sich erst der Meister”, though he applied that to a different subject.\u003c/p\u003e","title":"Preface"},{"content":"Zero Trust Architecture is an approach to better cybersecurity. To many, it seems daunting to implement. But it does not have to be hard to start.\nConsider this hypothetical situation.\nYou have an application with hundreds of thousands of sensitive records, let’s say client records. We assume that in this example it seems hard to implement MFA (Multi Factor Authentication) on it. What other controls can you implement to reduce the assumed trust? We can use the Kipling method, which is at the core of Zero Trust architectures, to engineer better controls. In short, the Kipling method is about the \u0026lsquo;who\u0026rsquo;, \u0026lsquo;what\u0026rsquo;, \u0026lsquo;when\u0026rsquo;, etcetera of allowed communication.\narchitecture-beta group exec(server)[Execution environment] service users(cloud)[Cloud Users] service fw[Firewall] service app(database)[App] in exec users:R --\u0026gt; L:fw fw:R --\u0026gt; L:app We want to allow specific access for specific use cases and be explicit about it. However, to focus our efforts, it makes sense to also identify that our biggest risk is the exfiltration of a lot of those sensitive records: a data breach.\nThe allow rules Let’s begin with the ‘who.’ Who is accessing the information? The application in our example probably does authentication and authorization of users. Where do these come from, and how accurate is that information? Ideally, this comes from an up-to-date corporate directory, but even if it’s not, you can, for example, ask how quickly a departing user has their access revoked.\nThen the ‘what’. Which application and resources are we accessing? What are specific users allowed to do? As part of operational risk management, we have probably already identified who, based on their role, can modify records or do other critical actions. But think one step further. As our main fear is exfiltration of large amounts of data, we can look at where we can control that. Maybe we can disallow large downloads, for example, except when a timely ‘four eyes’ approval is in place.\n(By the way, I think it makes sense to look at large downloads as a risk separate from small data leaks. After all, many employees have access to small amounts of information, and that risk is typically already accepted).\nMoving on to the ‘when’. It can reduce risk to limit access to specific times of the day for most users. There is not necessarily a reason to allow more.\nNext is the ‘where’. Where are the users and the application located? Our case description does not give us a lot of information here. The application could be a server, which then has an IP address. And through a firewall combined with a geographical information feed, we may be able to restrict access to users based on their location.\nThe ‘why’ stands for the business reason. In this case, our data is sensitive, and we don’t want it to be exfiltrated. And in our analysis, we have identified several possible controls.\nHow: One layer of enforcement of this would be in the application itself. In the Zero Trust jargon, we are putting a Policy Enforcement Point in the application logic.\nThe mirror allow rule However, there is also another set of ‘allow rules’ that is often overlooked. I am tempted to call these the ‘mirror’ rules, but it is not a standard Zero Trust term.\nThe data and the application reside in a compute environment, for example a server. There may be malware running in that server. After all, one of the tenets of Zero Trust is ‘assume breach’. If the server has permission to access anything on the internet, that malware might easily exfiltrate large amounts of data.\nIn addition to looking at the user accessing the data, we are looking at the place where the data resides and see if its compute environment can access the world, and thus exfiltrate data. This is the mirror image of the first rule: you could say that subject and target are switched around.\nWe can apply the same Kipling method from the perspective of that server (or any compute environment that has the data in it). What is it allowed to do?\nThe ‘who’ then is the server, and there are various ways to identify it, depending on how it is set up and how we want to control what it can do. It can be an IP address or domain name, for example.\nWhat can the server access? The more limited that is, the better. It should probably be capable of logging somewhere, but it needs only limited DNS and internet access. There are likely to be integrations with other systems, but these should be enumerated and controlled.\nWhen can the server initiate contact? This seems less relevant to restrict, because logging and many integrations can be operational at any time.\nWhy is this access needed? As said earlier, any compute environment must be able to connect to certain other services for its functional operation. Yet that does not imply that it needs broad uncontrolled network access. And there are known cases of abusing overly permissive egress.\nHow can this rule be enforced? One way would be at the outer perimeter of the network, although it is also conceivable to do it through a dedicated firewall or a (network) security group in a cloud environment.\nWhat is the benefit here? In this example we have looked at a specific case of data that we want to protect. The Zero Trust approach and the Kipling method led us to various options that we have. These options allow us to hammer out implicit trust in an existing application.\nThe nice thing is that we can rate and rank these options based on their effectiveness, cost, and feasibility, all while focusing on one specific strategic asset that we want to protect. This is in stark contrast to a traditional approach where you start with strengthening the perimeter and just hope that this will have an impact on the one application that you want to protect first.\nImplication for maturity What we can also illustrate with this story is that, even though we can start with an individual application, many of these controls will become better and cheaper if there is some maturity and shared services in the organization. Reliable user identities are helped by proper federated identity management. Fine grained network access rules are easier to do if there is more software defined networking.\nMaturity is an investment, but it pays off in cheaper, faster and better security. That is another tradeoff that this example illustrates.\nFor more information on Zero Trust, visit https://cczt.clubcloudcomputing.com\nAlso published at https://www.linkedin.com/pulse/retrofitting-zero-trust-existing-application-peter-hj-van-eijk-zjpte\n","permalink":"http://localhost:1313/posts/retrofitting-zero-trust-existing-application/","summary":"\u003cp\u003eZero Trust Architecture is an approach to better cybersecurity. To many, it seems daunting to implement. But it does not have to be hard to start.\u003c/p\u003e\n\u003cp\u003eConsider this hypothetical situation.\u003c/p\u003e\n\u003cp\u003eYou have an application with hundreds of thousands of sensitive records, let’s say client records. We assume that in this example it seems hard to implement MFA (Multi Factor Authentication) on it. What other controls can you implement to reduce the assumed trust? We can use the Kipling method, which is at the core of Zero Trust architectures, to engineer better controls. In short, the Kipling method is about the \u0026lsquo;who\u0026rsquo;, \u0026lsquo;what\u0026rsquo;, \u0026lsquo;when\u0026rsquo;, etcetera of allowed communication.\u003c/p\u003e","title":"Retrofitting Zero Trust on an existing application: an illustration"},{"content":"How Digital Infrastructures at scale create value, power, and risk. A field guide The internet is a digital infrastructure at scale. Let’s unpack that for a moment.\nIt is digital, because it moves bits between devices.\nIt is at scale, because it moves these bits between billions of devices ranging from websites to mobile phones to robot lawn mowers. (how many?) That is impressive technology, but what keeps that together is the infrastructure part of it. That is what defines the relation between the consumers and the providers, and that is what we are exploring here, as I will show you later.\nLooking at it through the lens of infrastructures allows us to understand use cases, abuse cases, and how to define, build and manage things like the internet.\nThese digital infrastructures are everywhere, and they are important tools to create value and power. But at the same time, even because of this, they can also be great sources of risk.\nBetter understanding digital infrastructures at scale allows us to better navigate the digital world at large.\nSo, what are some of the characteristics of infrastructures? What is it that I am calling a digital infrastructure?\nWe are taking the internet as an example of a digital infrastructure because most people are familiar with it.\n","permalink":"http://localhost:1313/posts/book-intro/","summary":"\u003ch1 id=\"how-digital-infrastructures-at-scale-create-value-power-and-risk\"\u003eHow Digital Infrastructures at scale create value, power, and risk.\u003c/h1\u003e\n\u003ch2 id=\"a-field-guide\"\u003eA field guide\u003c/h2\u003e\n\u003cp\u003eThe internet is a digital infrastructure at scale. Let’s unpack that for a moment.\u003c/p\u003e\n\u003cp\u003eIt is digital, because it moves bits between devices.\u003c/p\u003e\n\u003cp\u003eIt is at scale, because it moves these bits between billions of devices ranging from websites to mobile phones to robot lawn mowers. (how many?) That is impressive technology, but what keeps that together is the infrastructure part of it. That is what defines the relation between the consumers and the providers, and that is what we are exploring here, as I will show you later.\u003c/p\u003e","title":"Book Intro"},{"content":"A diagram should automagically appear here.\n%% icons from https://iconify.design architecture-beta group api(Storage)[API] service db(database)[Database] in api service disk1(disk)[Storage] in api service disk2(disk)[Storage] in api service server(server)[Server] in api db:L -- R:server disk1:T --\u0026gt; B:server disk2:T -- B:db %% icons from https://iconify.design architecture-beta group api(logos:aws-lambda)[API] service db(logos:aws-aurora)[Database] in api service disk1(logos:aws-glacier)[Storage] in api service disk2(logos:aws-s3)[Storage] in api service server(logos:aws-ec2)[Server] in api db:L -- R:server disk1:T -- B:server disk2:T -- B:db group keyvault(logos:aws-secrets-manager)[Key Vault] in api service dba(logos:aws-aurora)[Database] in keyvault service disk1a(logos:aws-glacier)[Storage] in keyvault server:R -- L:storage sequenceDiagram participant Alice Alice-\u0026gt;\u0026gt;John: Hello John, how are you? John--\u0026gt;\u0026gt;Alice: Great! Alice-\u0026gt;\u0026gt;John: How about you? John--\u0026gt;\u0026gt;Alice: Can\u0026#39;t complain. participant Bob Alice-\u0026gt;\u0026gt;Bob: Hi Bob, how are you today? Bob--\u0026gt;\u0026gt;Alice: Hi Alice, I\u0026#39;m doing well, thanks! How about you? Alice-\u0026gt;\u0026gt;Bob: I\u0026#39;m great, thanks for asking! Do you have any plans for the weekend? Bob--\u0026gt;\u0026gt;Alice: Yes, I\u0026#39;m thinking of going hiking. Would you like to join me? Alice-\u0026gt;\u0026gt;Bob: That sounds fun! Count me in. Bob--\u0026gt;\u0026gt;Alice: Great! I\u0026#39;ll send you the details later. ","permalink":"http://localhost:1313/posts/my-first-post/","summary":"\u003cp\u003eA diagram should automagically appear here.\u003c/p\u003e\n\u003cpre class=\"mermaid\"\u003e%%  icons from https://iconify.design\narchitecture-beta\n    group api(Storage)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T --\u0026gt; B:server\n    disk2:T -- B:db\n\u003c/pre\u003e\n\u003cpre class=\"mermaid\"\u003e%%  icons from https://iconify.design\narchitecture-beta\n    group api(logos:aws-lambda)[API]\n\n    service db(logos:aws-aurora)[Database] in api\n    service disk1(logos:aws-glacier)[Storage] in api\n    service disk2(logos:aws-s3)[Storage] in api\n    service server(logos:aws-ec2)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db\n\n    group keyvault(logos:aws-secrets-manager)[Key Vault] in api\n\n    service dba(logos:aws-aurora)[Database] in keyvault\n    service disk1a(logos:aws-glacier)[Storage] in keyvault\n\n    server:R -- L:storage\n\u003c/pre\u003e\n\u003cpre class=\"mermaid\"\u003esequenceDiagram\n participant Alice\n Alice-\u0026gt;\u0026gt;John: Hello John, how are you?\n John--\u0026gt;\u0026gt;Alice: Great!\n Alice-\u0026gt;\u0026gt;John: How about you?\n John--\u0026gt;\u0026gt;Alice: Can\u0026#39;t complain.\n participant Bob\n  Alice-\u0026gt;\u0026gt;Bob: Hi Bob, how are you today?\n  Bob--\u0026gt;\u0026gt;Alice: Hi Alice, I\u0026#39;m doing well, thanks! How about you?\n  Alice-\u0026gt;\u0026gt;Bob: I\u0026#39;m great, thanks for asking! Do you have any plans for the weekend?\n  Bob--\u0026gt;\u0026gt;Alice: Yes, I\u0026#39;m thinking of going hiking. Would you like to join me?\n  Alice-\u0026gt;\u0026gt;Bob: That sounds fun! Count me in.\n  Bob--\u0026gt;\u0026gt;Alice: Great! I\u0026#39;ll send you the details later.\n\u003c/pre\u003e","title":"A mermaid diagram"}]